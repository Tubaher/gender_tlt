model_config {
# Model Architecture can be chosen from:
# ['resnet', 'vgg', 'googlenet', 'alexnet']
arch: "efficientnet_b0"
# for resnet --> n_layers can be [10, 18, 50]
# for vgg --> n_layers can be [16, 19]
# n_layers: 101
use_batch_norm: True
use_bias: False
all_projections: False
use_pooling: True
use_imagenet_head: True
resize_interpolation_method: BICUBIC
# if you want to use the pretrained model,
# image size should be "3,224,224"
# otherwise, it can be "3, X, Y", where X,Y >= 16
# input_image_size: "3,224,224"
input_image_size: "3,224,224"
}
train_config {
train_dataset_path: "/workspace/tlt-experiments/data/split/train"
val_dataset_path: "/workspace/tlt-experiments/data/split/val"
pretrained_model_path: "/workspace/tlt-experiments/classification/pretrained_efficientnet_b0_swish/tlt_pretrained_classification_vefficientnet_b0_swish/efficientnet_b0_swish.hdf5"
# pretrained_model_path: "/workspace/tlt-experiments/classification/output_efficientnet_test_lr_02/weights/efficientnet_b0_065.tlt" 
# Only ['sgd', 'adam'] are supported for optimizer
optimizer {
    sgd {
    lr: 0.01
    decay: 0.0
    momentum: 0.9
    nesterov: False
    }
}
batch_size_per_gpu: 64
n_epochs: 80
# Number of CPU cores for loading data
n_workers: 16
# regularizer
reg_config {
    # regularizer type can be "L1", "L2" or "None".
    type: "L2"
    # if the type is not "None",
    # scope can be either "Conv2D" or "Dense" or both.
    scope: "Conv2D,Dense"
    # 0 < weight decay < 1
    weight_decay: 0.000015
}
# learning_rate
lr_config {
    cosine {
    learning_rate: 0.03
    soft_start: 0.0
    }
}
enable_random_crop: True
enable_center_crop: True
enable_color_augmentation: True
mixup_alpha: 0.2
label_smoothing: 0.1
}

eval_config {
  eval_dataset_path: "/workspace/tlt-experiments/data/split/test"
  model_path: "/workspace/tlt-experiments/classification/output_efficientnet_test_lr_04/weights/efficientnet_b0_80.tlt"
  top_k: 3
  batch_size: 256
  n_workers: 8
  enable_center_crop: True
}


